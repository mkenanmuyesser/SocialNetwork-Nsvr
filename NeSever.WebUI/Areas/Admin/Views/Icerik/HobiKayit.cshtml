@{
    ViewData["Title"] = "Kayit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@model NeSever.Common.Models.Icerik.HobiVM
<div class="d-flex flex-row flex-column-fluid container">
    <div class="main d-flex flex-column flex-row-fluid">
        <div class="subheader py-2 py-lg-4 subheader-transparent" id="kt_subheader">
            <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
                <div class="d-flex align-items-center flex-wrap mr-1">
                    <div class="d-flex align-items-baseline flex-wrap mr-5">
                        <h5 class="text-dark font-weight-bold my-1 mr-5">Hobi Kayıt</h5>

                        <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                            <li class="breadcrumb-item">
                                <a href="/Admin/Icerik" class="text-muted">İçerik</a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="Admin/Icerik/HobiKayit" class="text-muted">Hobi Kayıt</a>
                            </li>

                        </ul>
                    </div>
                </div>


            </div>
        </div>

        <div class="content flex-column-fluid" id="kt_content">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card card-custom gutter-b example example-compact">
                        <div class="card-header">
                            <h3 class="card-title">Kayıt Alanları</h3>

                        </div>
                        <form id="_form" method="post" enctype="multipart/form-data">
                            <input id="hdnHobiId" type="hidden" value="@Model.HobiId" />
                            <div class="card-body">
                                <div class="form-group row">

                                    <div class="col-lg-6">
                                        <label><span class="text-danger">* </span>Adı:</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" placeholder="" asp-for="HobiAdi" />
                                            <div class="input-group-append">
                                                <span class="input-group-text">
                                                    <i class="la la-bookmark-o"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Sıra:</label>
                                        <div class="input-group">
                                            <input class="form-control" type="number" asp-for="Sira" placeholder="0">
                                            <div class="input-group-append">
                                                <span class="input-group-text">
                                                    <i class="la la-sort-numeric-down"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Aktif Mi?:</label>
                                        <div class="input-group">
                                            <input asp-for="AktifMi" data-switch="true" type="checkbox" data-on-color="success" data-off-color="danger" data-on-text="Evet" data-off-text="Hayır" />
                                        </div>
                                    </div>

                                </div>

                            
                                <div class="form-group row">
                                    <div class="col-lg-12">
                                        <div class="fileinput fileinput-new" data-provides="fileinput">
                                            <div class="fileinput-new thumbnail" style="height: 100px; float:left;max-height:300px;max-width:300px">

                                                @if (string.IsNullOrEmpty(Model.ResimUrl))
                                                {

                                                    <img src="~/Themes/Admin/design/noimage.png" id="emptyFile" style="max-height:200px;max-width:150px" />

                                                }
                                                else
                                                {
                                                    <img style="max-height:200px;max-width:150px" src="data:image/png;base64,@Convert.ToBase64String(Model.Resim)" id="emptyFile" />

                                                }
                                            </div>
                                            <div class="fileinput-preview fileinput-exists thumbnail" style=" max-height: 200px;float:left"> </div>
                                            <div style="float:left">
                                                <span class="btn default btn-file">

                                                    <input id="file" name="file" type="file">
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="card-footer">
                                <div class="row">
                                    <div class="col-lg-6">
                                        @if (Model.HobiId > 0)
                                        {
                                            <button id="btnGuncelle" type="submit" class="btn btn-success mr-2">Güncelle</button>
                                        }
                                        else
                                        {
                                            <button id="btnKaydet" type="submit" class="btn btn-primary mr-2">Kaydet</button>
                                        }
                                        <button type="button" class="btn btn-secondary" onclick='location.reload();'>İptal</button>

                                    </div>

                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="/Themes/Admin/dist/assets/plugins/custom/ckeditor/ckeditor-classic.bundle.js?v=7.0.5"></script>

    <script src="/Themes/Admin/dist/assets/js/pages/crud/forms/widgets/bootstrap-switch.js?v=7.0.5"></script>
    <script src="/Themes/Admin/dist/assets/js/pages/crud/forms/widgets/bootstrap-datepicker.js?v=7.0.5"></script>

    <script type="text/javascript">
  
        FormValidation.formValidation(
            document.getElementById('_form'),
            {
                fields: {
                    HobiAdi: {
                        validators: {
                            notEmpty: {
                                message: 'Zorunlu alan'
                            }
                        }
                    },

                },
                plugins: {
                    submitButton: new FormValidation.plugins.SubmitButton(),
                    bootstrap: new FormValidation.plugins.Bootstrap({
                        eleInvalidClass: '',
                        eleValidClass: '',
                    })
                }
            }
        ).on('core.form.valid', function () {

            var data = new FormData($('#_form')[0]);
            var totalFiles = document.getElementById("file").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("file").files[i];
                data.append('Resim', file);
            }
            data.append('HobiId', $('#hdnHobiId').val());
            data.append('AktifMi', $('#AktifMi').prop('checked'));
            $.ajax({
                type: "post",
                url: "/Admin/Icerik/HobiKayit",
                data: data,
                contentType: false,
                processData: false,
                beforeSend: function () {
                    showLoading('_form');
                },
                success: function (result) {
                    hideLoading('_form');


                    if (result.id > 0) {
                        $('#hdnHobiId').val(result.id);

                        if (result.operation == "insert") {
                            $("#btnKaydet").removeClass('btn-primary');
                            $("#btnKaydet").addClass('btn-success');
                            $("#btnKaydet").html('Güncelle');
                            window.history.pushState("", "", "HobiKayit/" + result.id);
                        }

                        Swal.fire({
                            icon: 'success',
                            title: 'İşlem Başarılı!',
                            text: '',
                            showCloseButton: true,
                            confirmButtonText: "Tamam",
                            cancelButtonText: "İptal",
                        });
                    }
                    else if (result.id == -1){
                        Swal.fire({
                            icon: 'warning',
                            title: 'Uyarı!',
                            text: 'Bu İsim de Hobi Mevcut',
                            showCloseButton: true,
                            confirmButtonText: "Tamam",
                            cancelButtonText: "İptal",
                        });
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'İşlem Sırasında Hata Oluştu!',
                            text: '',
                            showCloseButton: true,
                            confirmButtonText: "Tamam",
                            cancelButtonText: "İptal",
                        });
                    }
                },

                error: function (err) {
                    hideLoading('_form');

                    Swal.fire(
                        "Hata",
                        "İşlem sırasında hata oluştu. " + err,
                        "error"
                    )
                }
            });

        }

        );
        function showLoading(id) {
            KTApp.block(document.getElementById(id), {
                overlayColor: '#000000',
                state: 'danger',
                message: 'Lütfen bekleyin...'
            });
        };
        function hideLoading(id) {
            KTApp.unblock(document.getElementById(id));
        };
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#emptyFile').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#file").change(function () {
            readURL(this);
        });

   
    </script>
}